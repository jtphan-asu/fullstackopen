{"ast":null,"code":"var _jsxFileName = \"/home/jtphan/Desktop/fullstackopen/part1dAnecdotes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //A proper place to define a component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 8\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Good: \", props.good]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Neutral: \", props.neutral]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Bad: \", props.bad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"All: \", props.all]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Average: \", props.average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Positive: \", props.positive]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  //save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [allClicks, setAll] = useState([]);\n  const [averageClicks, setAvg] = useState([]); //handle good click\n\n  const handleGoodClick = () => {\n    setAll(allClicks.concat(1));\n    setAvg(averageClicks.concat(1));\n    setGood(good + 1);\n  }; //handle neutral click\n\n\n  const handleNeutralClick = () => {\n    setAll(allClicks.concat(1));\n    setAvg(averageClicks.concat(0));\n    setNeutral(neutral + 1);\n  }; //handle bad clicks\n\n\n  const handleBadClicks = () => {\n    setAll(allClicks.concat(1));\n    setAvg(averageClicks.concat(-1));\n    setBad(bad + 1);\n  };\n\n  const initialValue = 0; //Get sum of all clicks\n\n  const sumWithInitial = allClicks.reduce((previousValue, currentValue) => previousValue + currentValue, initialValue); //Get average of all clicks\n\n  const avgWithInitial = averageClicks.reduce((previousValue, currentValue) => previousValue + currentValue, initialValue);\n  const averageArray = avgWithInitial / averageClicks.length || 0;\n  console.log('All Clicks length', allClicks.length);\n  console.log('Average array', averageArray); //Get positive vote percentage\n\n  const positivePercent = good / sumWithInitial * 100 + '%';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoodClick,\n        children: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNeutralClick,\n        children: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBadClicks,\n        children: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad,\n      all: sumWithInitial,\n      average: averageArray,\n      positive: positivePercent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Y9JAwi8WMqA2Q6EgyDTbeSVQDwY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Statistics","props","all","good","neutral","bad","average","positive","App","setGood","setNeutral","setBad","allClicks","setAll","averageClicks","setAvg","handleGoodClick","concat","handleNeutralClick","handleBadClicks","initialValue","sumWithInitial","reduce","previousValue","currentValue","avgWithInitial","averageArray","length","console","log","positivePercent"],"sources":["/home/jtphan/Desktop/fullstackopen/part1dAnecdotes/src/App.js"],"sourcesContent":["import { useState } from \"react\"\n\n\n //A proper place to define a component\n const Statistics = (props) => {\n   if(props.all === 0) {\n     return(\n       <div>\n         <h2>No feedback given</h2>\n       </div>\n     )\n   }\n    return (\n      <div>\n        <table>\n          <tbody>\n            <tr><td>Good: {props.good}</td></tr>\n          \n          \n            <tr><td>Neutral: {props.neutral}</td></tr>\n          \n          \n            <tr><td>Bad: {props.bad}</td></tr>\n          \n        \n            <tr><td>All: {props.all}</td></tr>\n         \n        \n            <tr><td>Average: {props.average}</td></tr>\n     \n          \n            <tr><td>Positive: {props.positive}</td></tr>\n          </tbody>\n      \n        </table>\n        \n      </div>\n    )\n}  \n\n\nconst App = () => {\n  //save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [allClicks, setAll] = useState([]);\n  const [averageClicks, setAvg] = useState([]);\n\n  //handle good click\n  const handleGoodClick = () => {\n    setAll(allClicks.concat(1))\n    setAvg(averageClicks.concat(1))\n    setGood(good + 1)\n  }\n\n  //handle neutral click\n  const handleNeutralClick = () => {\n    setAll(allClicks.concat(1))\n    setAvg(averageClicks.concat(0))\n    setNeutral(neutral + 1)\n  }\n  \n  //handle bad clicks\n  const handleBadClicks = () => {\n    setAll(allClicks.concat(1))\n    setAvg(averageClicks.concat(-1))\n    setBad(bad +1)\n  }\n\n  const initialValue = 0;\n \n  //Get sum of all clicks\n  const sumWithInitial = allClicks.reduce(\n    (previousValue, currentValue) => previousValue + currentValue, initialValue);\n\n  \n  //Get average of all clicks\n  const avgWithInitial = averageClicks.reduce(\n     (previousValue, currentValue) => previousValue + currentValue, initialValue);\n  \n  const averageArray = (avgWithInitial/averageClicks.length) || 0;\n    console.log('All Clicks length' , allClicks.length);\n    console.log('Average array', averageArray);\n\n  //Get positive vote percentage\n  const positivePercent = (good/sumWithInitial)*100 + '%';   \n\n\n  return (\n    <div>\n      <h1>give feedback</h1><br></br>\n      <div>\n        \n        <button onClick={handleGoodClick}>good</button>\n        <button onClick={handleNeutralClick}>neutral</button>\n        <button onClick={handleBadClicks}>bad</button>\n        \n      </div><br></br>\n\n      <Statistics\n            good = {good}\n            neutral = {neutral}\n            bad = {bad}\n            all = {sumWithInitial}\n            average = {averageArray}\n            positive = {positivePercent}\n      />\n\n    </div>\n  )\n\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}